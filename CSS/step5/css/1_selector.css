
.tagSelector h1{color:#0c0; font-size:20px;}
.tagSelector p{color:#0cf; font-size:15px;}
.tagSelector span{color:#336; font-size:13px;}

/*태그선택자 사용법*/

.idSelector p#paragraph1{font-size:16px; text-decoration:underline;}
.idSelector p#paragraph2{color:#09F; text-decoration:line-through;}
.idSelector p#paragraph3{font-weight:bold; text-decoration:overline;}

/*ID선택자 사용법*/

.classSelector p.f_size{font-size:20px;}
.classSelector p.f_weight{font-weight:bold;}
.classSelector p.f_color{color:#9cf;}

/*CLASS 선택자 사용법 + 다중 클래스 지정 */

.attrSelector fieldset{
    border: 1px solid #555; background-color: slateblue;
}
.attrSelector fieldset legend{
    border: 1px solid slateblue; background-color: #555; color: white;
    padding: 10px;
}
.attrSelector fieldset ul{
    margin: 0; padding: 0; list-style: none;
}
.attrSelector fieldset ul li{
    color: white; font-size: 14px; line-height: 30px;
}
.attrSelector fieldset ul li label{
    width: 100px; display: inline-block;
}
.attrSelector fieldset ul li input{
    padding: 5px; vertical-align: middle;
}
.attrSelector fieldset ul li input[type='text']{
    background-color: salmon; border: 3px solid lightcoral; color: maroon;
}
.attrSelector fieldset ul li input[type='password']{
    background-color: lightgreen; border: 3px solid lime;
}
.attrSelector fieldset ul li input[type='radio']{
    width: 25px; height: 25px;
    /* background-color: black; border: 5px solid yellow; */
}
.attrSelector fieldset ul li input[type='checkbox']{
    width: 25px; height: 25px;
    /* background-color: black; border: 5px solid yellow; */
}
.directSelector > h1{
    font-size: 28px; color: slateblue;
}
.directSelector > span{
    font-size: 22px; color: maroon; line-height: 40px; font-weight: bold;
}
.sameSelector h1 ~ h2{
    background-color: #333; color: white;
}
.sameSelector h1 + h2{
    font-size: 40px; color: plum;
}

.stringAttrSelector img[src$='png']{
    width: 100px; border: 3px solid #f00;
}
/* todo. 나머지 jpg, gif 에 원하는 css 넣어보기 */
.stringAttrSelector img[src$='jpg']{
    width: 200px; border: 5px solid #0f0;
}
.stringAttrSelector img[src$='gif']{
    width: 300px; border: 10px solid #00f;
}
.stringAttrSelector h1[title*='제목']{
    color: red;
}
.stringAttrSelector h1[title^='남자']{
    color: blue;
}
/* 
    ?속성값일치선택자.
    ? *= : 해당 단어가 들어가는 모든 대상 선택. (전,후 상관없음.)
    ? ^= : 해당 단어로 시작하는 것만 선택.
    ? $= : 해당 단어로 끝나는 대상 선택.
    ? |= : 해당 단어로 시작하거나 -으로 구분되는 대상 선택.
    ? ~= : 띄어쓰기 기준. 해당 단어 포함.
*/
.eventSelector a{
    display: block; font-size: 14px; line-height: 30px; text-align: center;
    margin-bottom: 20px;
}
.eventSelector a:link{ /* ? 대상:link가 걸린 상태 = href attr을 지닌 상태. */
    color: red;
}
.eventSelector a:hover{ /* ? 대상: mouse cursor가 올라간 상태. */
    color: black; background-color: red; text-decoration: none;
}
.eventSelector a:active{ /* ? 대상: click이 일어났을때 / press 상태와 동일 */
    color:white; background-color: black;
}
.eventSelector a:visited{ /* ? 대상:을 방문한 적이 있는 상태 / 배경은 cursor를 올렸을 때*/
    background-color: gray; color: mediumspringgreen;
}
.eventSelector a:focus{ /* ? 대상:에 초점이 맞춰진 상태.*/
    border: 3px solid deeppink;
}
.statusSelector input[type='checkbox']+label{
    display: inline-block; line-height: 20px; font-size: 14px;
    transition-duration: 0.75s;
}
.statusSelector input[type='checkbox']:checked+label{
    line-height: 0px; font-size: 0px;
}
.statusSelector input:enabled{
    background-color: black; color: white;
}
.statusSelector input:enabled::placeholder{
    color: peachpuff;
}
.statusSelector input:disabled{
    background-color: lightgray; color: darkgrey;
}
/* ? input checkbox, radio -> checked */
/* ! select option check -> selected. */

.virtualSelector ul{
    overflow: hidden; list-style: none; margin: 30px 0; padding: 0;
    /* background-color: palegoldenrod; */
}
.virtualSelector ul li{
    width: 14.28%; box-sizing: border-box; margin: 0; padding: 15px; float: left;
    text-align: center;
}
.virtualSelector ul li:nth-child(2n){
    background-color: #444; color: white;
}
.virtualSelector ul li:nth-child(2n+1){
    background-color: #09f;
}
.virtualSelector ul li:first-child{
    border-radius: 15px 0 0 15px;
}
.virtualSelector ul li:last-child{
    border-radius: 0 15px 15px 0;
}
/* todo https://css-tricks.com/examples/nth-child-tester/ */

.shapeSelector h1:nth-of-type(2){
    color: #30f;
}
.shapeSelector h2:first-of-type{
    color: #0c6;
}
.shapeSelector h3:last-of-type{
    color: #f06;
}
/* todo 위 결과를 child로 변환해보기 */
/* .shapeSelector h1:last-child{color: #30f;}
.shapeSelector h2:nth-child(2){color: #0c6;}
.shapeSelector h3:nth-child(4){color: #f06;} */

.textSelector h1::first-letter{
    font-size: 100px; color: #09f;
}
.textSelector p::first-line{
    color: #090; line-height: 30px; font-size: 14px; text-decoration: underline;
}

.backandfrontSelector p{
    counter-increment: rint;
}
.backandfrontSelector p::before{
    content: counter(rint) ".";
}
.backandfrontSelector p::after{
    content: '-' attr(data-page) "page"; font-weight: bold; color: deeppink;
}
.reactionSelector > *{
    color: #fff;
}
.reactionSelector > *::selection{
    background-color: #000; color: #ff0;
}
.notSelector input:not([type='text'],[type='password']){
    background-color: red;
}